< '#' , - >
关键字：include
< relop , LT(<) >
< id , 0 >:cstdio
< relop , GT(>) >
< esc , LF(换行) >
< '#' , - >
关键字：include
< relop , LT(<) >
< id , 1 >:cstdlib
< relop , GT(>) >
< esc , LF(换行) >
< '#' , - >
关键字：include
< relop , LT(<) >
< id , 2 >:cstring
< relop , GT(>) >
< esc , LF(换行) >
< id , 3 >:using
< id , 4 >:namespace
< id , 5 >:std
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< '//' , note >
注释如下：HEX转DEC
关键字：int
< id , 6 >:get_val
< '(' , - >
关键字：char
< '*' , - >
< id , 7 >:s
< ',' , - >
关键字：int
< id , 8 >:n
< ')' , - >
< '{' , - >
< esc , LF(换行) >
关键字：int
< id , 9 >:res
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
关键字：int
< id , 10 >:i
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< id , 10 >:i
< relop , LT(<) >
< id , 8 >:n
< ';' , - >
< id , 10 >:i
< '++' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 7 >:s
< '[' , - >
< id , 10 >:i
< ']' , - >
< relop , GE(>=) >
< esc , '''(单引号) >
< id , 11 >:A
< esc , '''(单引号) >
< logicop , and(&&) >
< id , 7 >:s
< '[' , - >
< id , 10 >:i
< ']' , - >
< relop , LE(<=) >
< esc , '''(单引号) >
< id , 12 >:F
< esc , '''(单引号) >
< ')' , - >
< id , 9 >:res
< relop , ass(=) >
< '(' , - >
< id , 9 >:res
< relop , LT(<) >
< relop , LT(<) >
< num ,1 >:4
< ')' , - >
< '(' , - >
< id , 7 >:s
< '[' , - >
< id , 10 >:i
< ']' , - >
< '-' , - >
< esc , '''(单引号) >
< id , 11 >:A
< esc , '''(单引号) >
< '+' , - >
< num ,2 >:10
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：else
关键字：if
< '(' , - >
< id , 7 >:s
< '[' , - >
< id , 10 >:i
< ']' , - >
< relop , GE(>=) >
< esc , '''(单引号) >
< num ,0 >:0
< esc , '''(单引号) >
< logicop , and(&&) >
< id , 7 >:s
< '[' , - >
< id , 10 >:i
< ']' , - >
< relop , LE(<=) >
< esc , '''(单引号) >
< num ,3 >:9
< esc , '''(单引号) >
< ')' , - >
< id , 9 >:res
< relop , ass(=) >
< '(' , - >
< id , 9 >:res
< relop , LT(<) >
< relop , LT(<) >
< num ,1 >:4
< ')' , - >
< '(' , - >
< id , 7 >:s
< '[' , - >
< id , 10 >:i
< ']' , - >
< '-' , - >
< esc , '''(单引号) >
< num ,0 >:0
< esc , '''(单引号) >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：else
关键字：return
< '-' , - >
< num ,4 >:1
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：return
< id , 9 >:res
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：struct
< id , 13 >:VM
< '{' , - >
< esc , LF(换行) >
关键字：const
关键字：char
< '*' , - >
< id , 14 >:CMD
< '[' , - >
< num ,5 >:14
< ']' , - >
< relop , ass(=) >
< '{' , - >
< esc , 双引号字符 >
字符串：RUN                                                                                                  
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：STOP                                                                                                 
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：ECHO                                                                                                 
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：ADD                                                                                                  
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：INC                                                                                                  
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：MOV                                                                                                  
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：CMP                                                                                                  
< esc, 双引号字符 >
< ',' , - >
< esc , LF(换行) >
< esc , 双引号字符 >
字符串：JMP                                                                                                  
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：JG                                                                                                   
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：JL                                                                                                   
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：JE                                                                                                   
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：JNG                                                                                                  
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：JNL                                                                                                  
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：JNE                                                                                                  
< esc, 双引号字符 >
< esc , LF(换行) >
< '}' , - >
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：int
< id , 15 >:lines
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：程序（汇编代码）存储区
关键字：char
< id , 16 >:code
< '[' , - >
< num ,6 >:103
< ']' , - >
< '[' , - >
< num ,7 >:20
< ']' , - >
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：存储器
< id , 17 >:FILE
< '*' , - >
< id , 18 >:fp
< ';' , - >
< esc , LF(换行) >
关键字：unsigned
< id , 19 >:mem
< '[' , - >
< num ,0 >:0
< id , 20 >:x10000
< ']' , - >
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：寄存器数组AX/BX/CX/DX
关键字：unsigned
< id , 21 >:reg
< '[' , - >
< num ,1 >:4
< ']' , - >
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< '//' , note >
注释如下：程序计数器
关键字：int
< id , 22 >:PC
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：指令编号
关键字：int
< id , 23 >:cmd
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：
关键字：int
< id , 24 >:terminated
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：指令的操作数部分
关键字：char
< id , 25 >:sa
< '[' , - >
< num ,2 >:10
< ']' , - >
< ',' , - >
< id , 26 >:sb
< '[' , - >
< num ,2 >:10
< ']' , - >
< ';' , - >
< esc , LF(换行) >
关键字：int
< id , 27 >:va
< ',' , - >
< id , 28 >:vb
< ';' , - >
< esc , LF(换行) >
关键字：int
< id , 29 >:ta
< ',' , - >
< id , 30 >:tb
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：CMP结果，1=L 2=E 3=G
关键字：int
< id , 31 >:cmp_result
< ';' , - >
< '//' , note >
注释如下：运行前初始化为0表示从未执行过CMP
< esc , LF(换行) >
< id , 13 >:VM
< '(' , - >
< ')' , - >
< ':' , - >
< id , 15 >:lines
< '(' , - >
< num ,0 >:0
< ')' , - >
< ',' , - >
< id , 22 >:PC
< '(' , - >
< num ,0 >:0
< ')' , - >
< ',' , - >
< id , 29 >:ta
< '(' , - >
< '-' , - >
< num ,4 >:1
< ')' , - >
< ',' , - >
< id , 30 >:tb
< '(' , - >
< '-' , - >
< num ,4 >:1
< ')' , - >
< ',' , - >
< id , 31 >:cmp_result
< '(' , - >
< num ,0 >:0
< ')' , - >
< ',' , - >
< id , 24 >:terminated
< '(' , - >
< num ,0 >:0
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 32 >:memset
< '(' , - >
< id , 19 >:mem
< ',' , - >
< num ,0 >:0
< ',' , - >
关键字：sizeof
< '(' , - >
< id , 19 >:mem
< ')' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 32 >:memset
< '(' , - >
< id , 21 >:reg
< ',' , - >
< num ,0 >:0
< ',' , - >
关键字：sizeof
< '(' , - >
< id , 21 >:reg
< ')' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 32 >:memset
< '(' , - >
< id , 16 >:code
< ',' , - >
< num ,0 >:0
< ',' , - >
关键字：sizeof
< '(' , - >
< id , 16 >:code
< ')' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：void
< id , 33 >:read
< '(' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：初始化总行数，程序计数器为0
< id , 15 >:lines
< relop , ass(=) >
< id , 22 >:PC
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
关键字：while
< '(' , - >
< id , 34 >:fgets
< '(' , - >
< id , 16 >:code
< '[' , - >
< id , 15 >:lines
< ']' , - >
< ',' , - >
关键字：sizeof
< '(' , - >
< id , 16 >:code
< '[' , - >
< id , 15 >:lines
< ']' , - >
< ')' , - >
< ',' , - >
< id , 18 >:fp
< ')' , - >
< ')' , - >
< id , 15 >:lines
< '++' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：读取一行汇编代码
关键字：void
< id , 35 >:read_next
< '(' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：int
< id , 36 >:len
< relop , ass(=) >
< id , 37 >:strlen
< '(' , - >
< id , 16 >:code
< '[' , - >
< id , 22 >:PC
< ']' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：int
< id , 38 >:blank
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
关键字：char
< id , 39 >:tmp
< '[' , - >
< num ,2 >:10
< ']' , - >
< ';' , - >
< esc , LF(换行) >
关键字：int
< id , 40 >:l
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
关键字：int
< id , 10 >:i
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< id , 10 >:i
< relop , LT(<) >
< id , 36 >:len
< ';' , - >
< id , 10 >:i
< '++' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 16 >:code
< '[' , - >
< id , 22 >:PC
< ']' , - >
< '[' , - >
< id , 10 >:i
< ']' , - >
< relop, EQ(==) >
< esc , '''(单引号) >
< esc , '''(单引号) >
< logicop , or(||) >
< id , 16 >:code
< '[' , - >
< id , 22 >:PC
< ']' , - >
< '[' , - >
< id , 10 >:i
< ']' , - >
< relop, EQ(==) >
< esc , '''(单引号) >
< esc ,  >
< id , 8 >:n
< esc , '''(单引号) >
< logicop , or(||) >
< id , 16 >:code
< '[' , - >
< id , 22 >:PC
< ']' , - >
< '[' , - >
< id , 10 >:i
< ']' , - >
< relop, EQ(==) >
< esc , '''(单引号) >
< esc ,  >
< id , 41 >:r
< esc , '''(单引号) >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 39 >:tmp
< '[' , - >
< id , 40 >:l
< ']' , - >
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：        printf("(%s)\n", tmp);
< '//' , note >
注释如下：遇到第1个空字符->确定指令助记符
关键字：if
< '(' , - >
< id , 38 >:blank
< relop, EQ(==) >
< num ,0 >:0
< ')' , - >
< '{' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
关键字：int
< id , 42 >:j
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< id , 42 >:j
< relop , LT(<) >
< num ,5 >:14
< ';' , - >
< id , 42 >:j
< '++' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 43 >:strcmp
< '(' , - >
< id , 14 >:CMD
< '[' , - >
< id , 42 >:j
< ']' , - >
< ',' , - >
< id , 39 >:tmp
< ')' , - >
< relop, EQ(==) >
< num ,0 >:0
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 23 >:cmd
< relop , ass(=) >
< id , 42 >:j
< ';' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：遇到第2个空字符->确定第1个操作数
< '}' , - >
关键字：else
关键字：if
< '(' , - >
< id , 38 >:blank
< relop, EQ(==) >
< num ,4 >:1
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 44 >:strcpy
< '(' , - >
< id , 25 >:sa
< ',' , - >
< id , 39 >:tmp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：遇到第3个空字符->确定第2个操作数
< '}' , - >
关键字：else
关键字：if
< '(' , - >
< id , 38 >:blank
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 44 >:strcpy
< '(' , - >
< id , 26 >:sb
< ',' , - >
< id , 39 >:tmp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 38 >:blank
< '++' , - >
< ';' , - >
< esc , LF(换行) >
< id , 40 >:l
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
< '}' , - >
关键字：else
< '{' , - >
< esc , LF(换行) >
< id , 39 >:tmp
< '[' , - >
< id , 40 >:l
< '++' , - >
< ']' , - >
< relop , ass(=) >
< id , 16 >:code
< '[' , - >
< id , 22 >:PC
< ']' , - >
< '[' , - >
< id , 10 >:i
< ']' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：指令分析，根据各操作数寻址方式，确定操作数所在位置性质，及相应的操作数值/位置
< '//' , note >
注释如下：获取操作数所在位置性质，若指令有第1个操作数，属性存入ta，若指令有第2个操作数，属性存入tb
< '//' , note >
注释如下：2表示操作数在寄存器，1表示操作数在存储器，0表示操作数是立即数
< '//' , note >
注释如下：获取操作数的值或位置，若指令有第1个操作数，结果存入va，若指令有第2个操作数，结果存入vb
< '//' , note >
注释如下：操作数在寄存器时，结果为寄存器数组的下标
< '//' , note >
注释如下：操作数在存储器时，结果为存储器中的地址
< '//' , note >
注释如下：操作数为立即数时，结果为立即数的值
关键字：void
< id , 45 >:translate
< '(' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< id , 29 >:ta
< relop , ass(=) >
< id , 30 >:tb
< relop , ass(=) >
< '-' , - >
< num ,4 >:1
< ';' , - >
< esc , LF(换行) >
关键字：int
< id , 46 >:len_a
< relop , ass(=) >
< num ,0 >:0
< ',' , - >
< id , 47 >:len_b
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
关键字：switch
< '(' , - >
< id , 23 >:cmd
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：无操作数，跳出
关键字：case
< num ,0 >:0
< ':' , - >
< esc , LF(换行) >
关键字：case
< num ,4 >:1
< ':' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：双操作数指令，先分析第2个操作数（源操作数）
关键字：case
< num ,9 >:3
< ':' , - >
< esc , LF(换行) >
关键字：case
< num ,10 >:5
< ':' , - >
< esc , LF(换行) >
关键字：case
< num ,11 >:6
< ':' , - >
< esc , LF(换行) >
< id , 47 >:len_b
< relop , ass(=) >
< id , 37 >:strlen
< '(' , - >
< id , 26 >:sb
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：双操作数的源操作数长度
关键字：if
< '(' , - >
< id , 47 >:len_b
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< '{' , - >
< '//' , note >
注释如下：寄存器寻址
< id , 30 >:tb
< relop , ass(=) >
< num ,8 >:2
< ';' , - >
< '//' , note >
注释如下：操作数在寄存器，va表示寄存器下标
< id , 28 >:vb
< relop , ass(=) >
< id , 26 >:sb
< '[' , - >
< num ,0 >:0
< ']' , - >
< '-' , - >
< esc , '''(单引号) >
< id , 11 >:A
< esc , '''(单引号) >
< ';' , - >
< '//' , note >
注释如下：表示寄存器数组中的下标
< '}' , - >
关键字：else
关键字：if
< '(' , - >
< id , 47 >:len_b
< relop, EQ(==) >
< num ,9 >:3
< ')' , - >
< '{' , - >
< '//' , note >
注释如下：寄存器间接寻址，操作数有前导T表示它是地址
< id , 30 >:tb
< relop , ass(=) >
< num ,4 >:1
< ';' , - >
< '//' , note >
注释如下：操作数在存储器，va表示存储器地址
< id , 28 >:vb
< relop , ass(=) >
< id , 21 >:reg
< '[' , - >
< id , 26 >:sb
< '[' , - >
< num ,4 >:1
< ']' , - >
< '-' , - >
< esc , '''(单引号) >
< id , 11 >:A
< esc , '''(单引号) >
< ']' , - >
< ';' , - >
< '//' , note >
注释如下：从寄存器数组中取出操作数地址
< '}' , - >
关键字：else
关键字：if
< '(' , - >
< id , 47 >:len_b
< relop, EQ(==) >
< num ,1 >:4
< ')' , - >
< '{' , - >
< '//' , note >
注释如下：立即数寻址
< id , 30 >:tb
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< '//' , note >
注释如下：操作数是立即数，va表示立即数的值
< id , 28 >:vb
< relop , ass(=) >
< id , 6 >:get_val
< '(' , - >
< id , 26 >:sb
< ',' , - >
< num ,1 >:4
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：立即数的值
< '}' , - >
关键字：else
关键字：if
< '(' , - >
< id , 47 >:len_b
< relop, EQ(==) >
< num ,10 >:5
< ')' , - >
< '{' , - >
< '//' , note >
注释如下：直接寻址，操作数有前导T表示它是地址
< id , 30 >:tb
< relop , ass(=) >
< num ,4 >:1
< ';' , - >
< '//' , note >
注释如下：操作数在存储器，va表示存储器地址
< id , 28 >:vb
< relop , ass(=) >
< id , 6 >:get_val
< '(' , - >
< id , 26 >:sb
< '+' , - >
< num ,4 >:1
< ',' , - >
< num ,1 >:4
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：立即数作为操作数地址
< '}' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：分析第一个操作数
关键字：default
< ':' , - >
< esc , LF(换行) >
< id , 46 >:len_a
< relop , ass(=) >
< id , 37 >:strlen
< '(' , - >
< id , 25 >:sa
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：第一个操作数长度
关键字：if
< '(' , - >
< id , 46 >:len_a
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 29 >:ta
< relop , ass(=) >
< num ,8 >:2
< ';' , - >
< esc , LF(换行) >
< id , 27 >:va
< relop , ass(=) >
< id , 25 >:sa
< '[' , - >
< num ,0 >:0
< ']' , - >
< '-' , - >
< esc , '''(单引号) >
< id , 11 >:A
< esc , '''(单引号) >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
关键字：else
关键字：if
< '(' , - >
< id , 46 >:len_a
< relop, EQ(==) >
< num ,9 >:3
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 29 >:ta
< relop , ass(=) >
< num ,4 >:1
< ';' , - >
< esc , LF(换行) >
< id , 27 >:va
< relop , ass(=) >
< id , 21 >:reg
< '[' , - >
< id , 25 >:sa
< '[' , - >
< num ,4 >:1
< ']' , - >
< '-' , - >
< esc , '''(单引号) >
< id , 11 >:A
< esc , '''(单引号) >
< ']' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
关键字：else
关键字：if
< '(' , - >
< id , 46 >:len_a
< relop, EQ(==) >
< num ,1 >:4
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 29 >:ta
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
< id , 27 >:va
< relop , ass(=) >
< id , 6 >:get_val
< '(' , - >
< id , 25 >:sa
< ',' , - >
< num ,1 >:4
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
关键字：else
关键字：if
< '(' , - >
< id , 46 >:len_a
< relop, EQ(==) >
< num ,10 >:5
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 29 >:ta
< relop , ass(=) >
< num ,4 >:1
< ';' , - >
< esc , LF(换行) >
< id , 27 >:va
< relop , ass(=) >
< id , 6 >:get_val
< '(' , - >
< id , 25 >:sa
< '+' , - >
< num ,4 >:1
< ',' , - >
< num ,1 >:4
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< '//' , note >
注释如下：    printf("<%s> ", CMD[cmd]);
< '//' , note >
注释如下：    if (ta >= 0) printf("[%04X] ", va);
< '//' , note >
注释如下：    if (tb >= 0) printf("[%04X]", vb);
< '//' , note >
注释如下：    puts("");
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：int
< id , 48 >:count
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：根据指令分析结果执行真正的寻址操作，获取操作数，放入a,b
关键字：bool
< id , 49 >:process
< '(' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：unsigned
< id , 50 >:a
< ',' , - >
< id , 51 >:b
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：ta=1，获取存储器中连续2个字节
< '//' , note >
注释如下：操作数的值=高字节左移8位+低字节
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,4 >:1
< ')' , - >
< id , 50 >:a
< relop , ass(=) >
< '(' , - >
< id , 19 >:mem
< '[' , - >
< id , 27 >:va
< '+' , - >
< num ,4 >:1
< ']' , - >
< relop , LT(<) >
< relop , LT(<) >
< num ,12 >:8
< ')' , - >
< id , 19 >:mem
< '[' , - >
< id , 27 >:va
< ']' , - >
< ';' , - >
< '//' , note >
注释如下：操作数在存储器，va表示存储器地址
关键字：else
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< id , 50 >:a
< relop , ass(=) >
< id , 21 >:reg
< '[' , - >
< id , 27 >:va
< ']' , - >
< ';' , - >
< '//' , note >
注释如下：操作数在寄存器，va表示寄存器下标
关键字：else
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,0 >:0
< ')' , - >
< id , 50 >:a
< relop , ass(=) >
< id , 27 >:va
< ';' , - >
< '//' , note >
注释如下：操作数是立即数，va表示立即数的值
关键字：if
< '(' , - >
< id , 30 >:tb
< relop, EQ(==) >
< num ,4 >:1
< ')' , - >
< id , 51 >:b
< relop , ass(=) >
< '(' , - >
< id , 19 >:mem
< '[' , - >
< id , 28 >:vb
< '+' , - >
< num ,4 >:1
< ']' , - >
< relop , LT(<) >
< relop , LT(<) >
< num ,12 >:8
< ')' , - >
< id , 19 >:mem
< '[' , - >
< id , 28 >:vb
< ']' , - >
< ';' , - >
< esc , LF(换行) >
关键字：else
关键字：if
< '(' , - >
< id , 30 >:tb
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< id , 51 >:b
< relop , ass(=) >
< id , 21 >:reg
< '[' , - >
< id , 28 >:vb
< ']' , - >
< ';' , - >
< esc , LF(换行) >
关键字：else
关键字：if
< '(' , - >
< id , 30 >:tb
< relop, EQ(==) >
< num ,0 >:0
< ')' , - >
< id , 51 >:b
< relop , ass(=) >
< id , 28 >:vb
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< '//' , note >
注释如下：      printf("[%04X], [%04X]\n", a, b);
关键字：switch
< '(' , - >
< id , 23 >:cmd
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：格式化输出4位(04)大写(X)十六进制数值
关键字：case
< num ,8 >:2
< ':' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：%04X\n                                                                                               
< esc, 双引号字符 >
< ',' , - >
< id , 50 >:a
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,9 >:3
< ':' , - >
< '//' , note >
注释如下：ADD
< '//' , note >
注释如下：先做加法，然后按位与0FFFFH得低16位
< '//' , note >
注释如下：这里变量类型是unsigned int 其实直接用unsigned short更方便
< id , 50 >:a
< assignop , assad(+=) >
< id , 51 >:b
< ';' , - >
< esc , LF(换行) >
< id , 50 >:a
< '&' , - >
< relop , ass(=) >
< num ,0 >:0
< id , 53 >:xffff
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：如果目的操作数位于存储器，应该先后存高字节（操作数右移8位）和低字节
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,4 >:1
< ')' , - >
< id , 19 >:mem
< '[' , - >
< id , 27 >:va
< '+' , - >
< num ,4 >:1
< ']' , - >
< relop , ass(=) >
< '(' , - >
< id , 50 >:a
< relop , GT(>) >
< relop , GT(>) >
< num ,12 >:8
< ')' , - >
< ',' , - >
< id , 19 >:mem
< '[' , - >
< id , 27 >:va
< ']' , - >
< relop , ass(=) >
< id , 50 >:a
< '&' , - >
< num ,0 >:0
< id , 54 >:xff
< ';' , - >
< esc , LF(换行) >
关键字：else
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< id , 21 >:reg
< '[' , - >
< id , 27 >:va
< ']' , - >
< relop , ass(=) >
< id , 50 >:a
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：				printf("<%04hX>\n", mem[vb + 1] << 8 | mem[vb]);
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,1 >:4
< ':' , - >
< '//' , note >
注释如下：INC
< id , 50 >:a
< '++' , - >
< ';' , - >
< esc , LF(换行) >
< id , 50 >:a
< '&' , - >
< relop , ass(=) >
< num ,0 >:0
< id , 53 >:xffff
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,4 >:1
< ')' , - >
< id , 19 >:mem
< '[' , - >
< id , 27 >:va
< '+' , - >
< num ,4 >:1
< ']' , - >
< relop , ass(=) >
< '(' , - >
< id , 50 >:a
< relop , GT(>) >
< relop , GT(>) >
< num ,12 >:8
< ')' , - >
< ',' , - >
< id , 19 >:mem
< '[' , - >
< id , 27 >:va
< ']' , - >
< relop , ass(=) >
< id , 50 >:a
< '&' , - >
< num ,0 >:0
< id , 54 >:xff
< ';' , - >
< esc , LF(换行) >
关键字：else
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< id , 21 >:reg
< '[' , - >
< id , 27 >:va
< ']' , - >
< relop , ass(=) >
< id , 50 >:a
< ';' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,10 >:5
< ':' , - >
< '//' , note >
注释如下：MOV
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,4 >:1
< ')' , - >
< id , 19 >:mem
< '[' , - >
< id , 27 >:va
< '+' , - >
< num ,4 >:1
< ']' , - >
< relop , ass(=) >
< '(' , - >
< id , 51 >:b
< relop , GT(>) >
< relop , GT(>) >
< num ,12 >:8
< ')' , - >
< ',' , - >
< id , 19 >:mem
< '[' , - >
< id , 27 >:va
< ']' , - >
< relop , ass(=) >
< id , 51 >:b
< '&' , - >
< num ,0 >:0
< id , 54 >:xff
< ';' , - >
< esc , LF(换行) >
关键字：else
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< id , 21 >:reg
< '[' , - >
< id , 27 >:va
< ']' , - >
< relop , ass(=) >
< id , 51 >:b
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：      printf("(%04X)\n", mem[va + 1] << 8 | mem[va]);
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,11 >:6
< ':' , - >
< '//' , note >
注释如下：CMP
关键字：if
< '(' , - >
< id , 50 >:a
< relop , LT(<) >
< id , 51 >:b
< ')' , - >
< id , 31 >:cmp_result
< relop , ass(=) >
< num ,4 >:1
< ';' , - >
< '//' , note >
注释如下：L
< esc , LF(换行) >
< esc , LF(换行) >
关键字：else
关键字：if
< '(' , - >
< id , 50 >:a
< relop , GT(>) >
< id , 51 >:b
< ')' , - >
< id , 31 >:cmp_result
< relop , ass(=) >
< num ,9 >:3
< ';' , - >
< '//' , note >
注释如下：G
关键字：else
< id , 31 >:cmp_result
< relop , ass(=) >
< num ,8 >:2
< ';' , - >
< '//' , note >
注释如下：E
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,13 >:7
< ':' , - >
< '//' , note >
注释如下：JMP，其中a-1是第a条指令在数组中的位置
< '//' , note >
注释如下：由于每条指令执行完毕之后，程序计数器PC都要自增，因此需要使自增结果为a-1
< '//' , note >
注释如下：所以将程序计数器修改为目标值-1，即a-2
< id , 22 >:PC
< relop , ass(=) >
< '(' , - >
关键字：int
< ')' , - >
< id , 50 >:a
< '-' , - >
< num ,8 >:2
< ';' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,12 >:8
< ':' , - >
< '//' , note >
注释如下：JG
关键字：if
< '(' , - >
< id , 31 >:cmp_result
< relop, EQ(==) >
< num ,9 >:3
< ')' , - >
< id , 22 >:PC
< relop , ass(=) >
< '(' , - >
关键字：int
< ')' , - >
< id , 50 >:a
< '-' , - >
< num ,8 >:2
< ';' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,3 >:9
< ':' , - >
< '//' , note >
注释如下：JL
关键字：if
< '(' , - >
< id , 31 >:cmp_result
< relop, EQ(==) >
< num ,4 >:1
< ')' , - >
< id , 22 >:PC
< relop , ass(=) >
< '(' , - >
关键字：int
< ')' , - >
< id , 50 >:a
< '-' , - >
< num ,8 >:2
< ';' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,2 >:10
< ':' , - >
< '//' , note >
注释如下：JE
关键字：if
< '(' , - >
< id , 31 >:cmp_result
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< id , 22 >:PC
< relop , ass(=) >
< '(' , - >
关键字：int
< ')' , - >
< id , 50 >:a
< '-' , - >
< num ,8 >:2
< ';' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,14 >:11
< ':' , - >
< '//' , note >
注释如下：JNG
关键字：if
< '(' , - >
< id , 31 >:cmp_result
< relop , LE(<=) >
< num ,8 >:2
< ')' , - >
< id , 22 >:PC
< relop , ass(=) >
< '(' , - >
关键字：int
< ')' , - >
< id , 50 >:a
< '-' , - >
< num ,8 >:2
< ';' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,15 >:12
< ':' , - >
< '//' , note >
注释如下：JNL
关键字：if
< '(' , - >
< id , 31 >:cmp_result
< relop , GE(>=) >
< num ,8 >:2
< ')' , - >
< id , 22 >:PC
< relop , ass(=) >
< '(' , - >
关键字：int
< ')' , - >
< id , 50 >:a
< '-' , - >
< num ,8 >:2
< ';' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< num ,16 >:13
< ':' , - >
< '//' , note >
注释如下：JNE
关键字：if
< '(' , - >
< id , 31 >:cmp_result
< relop , (!=) >
< num ,8 >:2
< ')' , - >
< id , 22 >:PC
< relop , ass(=) >
< '(' , - >
关键字：int
< ')' , - >
< id , 50 >:a
< '-' , - >
< num ,8 >:2
< ';' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< id , 22 >:PC
< '++' , - >
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< id , 48 >:count
< '++' , - >
< ';' , - >
< '//' , note >
注释如下：已执行指令条数
< '//' , note >
注释如下：STOP
关键字：if
< '(' , - >
< id , 23 >:cmd
< relop, EQ(==) >
< num ,4 >:1
< ')' , - >
关键字：return
< id , 55 >:false
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：已执行条数超过预设值
关键字：if
< '(' , - >
< id , 48 >:count
< relop , GE(>=) >
< num ,17 >:1000000
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 56 >:puts
< '(' , - >
< esc , 双引号字符 >
字符串：TLE                                                                                                  
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：return
< id , 55 >:false
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：return
< id , 57 >:true
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：int
< id , 58 >:check_error
< '(' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：未比较，但尝试跳转
关键字：if
< '(' , - >
< id , 23 >:cmd
< relop , GT(>) >
< num ,13 >:7
< logicop , and(&&) >
< id , 31 >:cmp_result
< relop, EQ(==) >
< num ,0 >:0
< ')' , - >
关键字：return
< num ,1 >:4
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：在存储器中寻址超出预设范围
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,4 >:1
< logicop , and(&&) >
< '(' , - >
< id , 27 >:va
< relop , LT(<) >
< num ,0 >:0
< id , 59 >:x3000
< logicop , or(||) >
< id , 27 >:va
< relop , GE(>=) >
< num ,0 >:0
< id , 60 >:xafff
< ')' , - >
< ')' , - >
关键字：return
< num ,8 >:2
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 30 >:tb
< relop, EQ(==) >
< num ,4 >:1
< logicop , and(&&) >
< '(' , - >
< id , 28 >:vb
< relop , LT(<) >
< num ,0 >:0
< id , 59 >:x3000
< logicop , or(||) >
< id , 28 >:vb
< relop , GE(>=) >
< num ,0 >:0
< id , 60 >:xafff
< ')' , - >
< ')' , - >
关键字：return
< num ,8 >:2
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 23 >:cmd
< relop , GE(>=) >
< num ,13 >:7
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：按寻址方式获取操作数的值，值的含义是目标指令的序数
关键字：unsigned
< id , 50 >:a
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,4 >:1
< ')' , - >
< id , 50 >:a
< relop , ass(=) >
< id , 19 >:mem
< '[' , - >
< id , 27 >:va
< '+' , - >
< num ,4 >:1
< ']' , - >
< relop , LT(<) >
< relop , LT(<) >
< num ,12 >:8
< id , 19 >:mem
< '[' , - >
< id , 27 >:va
< ']' , - >
< ';' , - >
< '//' , note >
注释如下：操作数在存储器，va表示存储器地址
关键字：else
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< id , 50 >:a
< relop , ass(=) >
< id , 21 >:reg
< '[' , - >
< id , 27 >:va
< ']' , - >
< ';' , - >
< '//' , note >
注释如下：操作数在寄存器，va表示寄存器下标
关键字：else
关键字：if
< '(' , - >
< id , 29 >:ta
< relop, EQ(==) >
< num ,0 >:0
< ')' , - >
< id , 50 >:a
< relop , ass(=) >
< id , 27 >:va
< ';' , - >
< '//' , note >
注释如下：操作数是立即数，va表示立即数的值
< '//' , note >
注释如下：符合跳转条件，但目标序数有误（等于1时相应指令为RUN，或序数>总行数）
关键字：if
< '(' , - >
< id , 23 >:cmd
< relop, EQ(==) >
< num ,13 >:7
< logicop , or(||) >
< esc , LF(换行) >
< '(' , - >
< id , 23 >:cmd
< relop, EQ(==) >
< num ,12 >:8
< logicop , and(&&) >
< id , 31 >:cmp_result
< relop, EQ(==) >
< num ,9 >:3
< ')' , - >
< logicop , or(||) >
< esc , LF(换行) >
< '(' , - >
< id , 23 >:cmd
< relop, EQ(==) >
< num ,3 >:9
< logicop , and(&&) >
< id , 31 >:cmp_result
< relop, EQ(==) >
< num ,4 >:1
< ')' , - >
< logicop , or(||) >
< esc , LF(换行) >
< '(' , - >
< id , 23 >:cmd
< relop, EQ(==) >
< num ,2 >:10
< logicop , and(&&) >
< id , 31 >:cmp_result
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< logicop , or(||) >
< esc , LF(换行) >
< '(' , - >
< id , 23 >:cmd
< relop, EQ(==) >
< num ,14 >:11
< logicop , and(&&) >
< id , 31 >:cmp_result
< relop , LE(<=) >
< num ,8 >:2
< ')' , - >
< logicop , or(||) >
< esc , LF(换行) >
< '(' , - >
< id , 23 >:cmd
< relop, EQ(==) >
< num ,15 >:12
< logicop , and(&&) >
< id , 31 >:cmp_result
< relop , GE(>=) >
< num ,8 >:2
< ')' , - >
< logicop , or(||) >
< esc , LF(换行) >
< '(' , - >
< id , 23 >:cmd
< relop, EQ(==) >
< num ,16 >:13
< logicop , and(&&) >
< id , 31 >:cmp_result
< relop , (!=) >
< num ,8 >:2
< ')' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 50 >:a
< relop , LT(<) >
< num ,8 >:2
< id , 61 >:u
< logicop , or(||) >
< id , 50 >:a
< relop , GT(>) >
< '(' , - >
关键字：unsigned
< ')' , - >
< id , 15 >:lines
< ')' , - >
关键字：return
< num ,9 >:3
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：无错误
关键字：return
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：bool
< id , 62 >:next
< '(' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< id , 35 >:read_next
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 45 >:translate
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：int
< id , 63 >:error
< relop , ass(=) >
< id , 58 >:check_error
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 63 >:error
< ')' , - >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 63 >:error
< relop, EQ(==) >
< num ,1 >:4
< ')' , - >
< id , 56 >:puts
< '(' , - >
< esc , 双引号字符 >
字符串：CMP_MISSING                                                                                          
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 63 >:error
< relop, EQ(==) >
< num ,9 >:3
< ')' , - >
< id , 56 >:puts
< '(' , - >
< esc , 双引号字符 >
字符串：RUNTIME_ERROR                                                                                        
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 63 >:error
< relop, EQ(==) >
< num ,8 >:2
< ')' , - >
< id , 56 >:puts
< '(' , - >
< esc , 双引号字符 >
字符串：ACCESS_VIOLATION                                                                                     
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：return
< id , 55 >:false
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：return
< id , 49 >:process
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：void
< id , 64 >:print_code
< '(' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
关键字：int
< id , 10 >:i
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< id , 10 >:i
< relop , LT(<) >
< id , 15 >:lines
< ';' , - >
< id , 10 >:i
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：%04X\t%s                                                                                             
< esc, 双引号字符 >
< ',' , - >
< id , 10 >:i
< '+' , - >
< num ,4 >:1
< ',' , - >
< id , 16 >:code
< '[' , - >
< id , 10 >:i
< ']' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：void
< id , 65 >:print_next_line
< '(' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 56 >:puts
< '(' , - >
< id , 16 >:code
< '[' , - >
< id , 22 >:PC
< ']' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：void
< id , 66 >:print_registers
< '(' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
关键字：int
< id , 10 >:i
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< id , 10 >:i
< relop , LT(<) >
< num ,1 >:4
< ';' , - >
< id , 10 >:i
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：%cX=%04X\t                                                                                           
< esc, 双引号字符 >
< ',' , - >
< esc , '''(单引号) >
< id , 11 >:A
< esc , '''(单引号) >
< '+' , - >
< id , 10 >:i
< ',' , - >
< id , 21 >:reg
< '[' , - >
< id , 10 >:i
< ']' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：PC=%04X\n                                                                                            
< esc, 双引号字符 >
< ',' , - >
< id , 22 >:PC
< '+' , - >
< num ,4 >:1
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：void
< id , 67 >:print_single_register
< '(' , - >
关键字：int
< id , 68 >:v
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：%cX=%04X\n                                                                                           
< esc, 双引号字符 >
< ',' , - >
< esc , '''(单引号) >
< id , 11 >:A
< esc , '''(单引号) >
< '+' , - >
< id , 68 >:v
< ',' , - >
< id , 21 >:reg
< '[' , - >
< id , 68 >:v
< ']' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：void
< id , 69 >:dump
< '(' , - >
关键字：char
< '*' , - >
< id , 70 >:debug_cmd
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：int
< id , 71 >:dump_start
< relop , ass(=) >
< id , 6 >:get_val
< '(' , - >
< id , 70 >:debug_cmd
< '+' , - >
< num ,8 >:2
< ',' , - >
< num ,1 >:4
< ')' , - >
< ',' , - >
< id , 72 >:current
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 71 >:dump_start
< relop , GE(>=) >
< num ,0 >:0
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 72 >:current
< relop , ass(=) >
< id , 71 >:dump_start
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
关键字：int
< id , 10 >:i
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< id , 10 >:i
< relop , LT(<) >
< num ,12 >:8
< ';' , - >
< id , 10 >:i
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：%04X\t                                                                                               
< esc, 双引号字符 >
< ',' , - >
< id , 72 >:current
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
关键字：int
< id , 42 >:j
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< id , 42 >:j
< relop , LT(<) >
< num ,13 >:7
< ';' , - >
< id , 42 >:j
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：%02X                                                                                                 
< esc, 双引号字符 >
< ',' , - >
< id , 19 >:mem
< '[' , - >
< id , 72 >:current
< ']' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 72 >:current
< '++' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：%02X                                                                                                 
< esc, 双引号字符 >
< ',' , - >
< id , 19 >:mem
< '[' , - >
< id , 72 >:current
< ']' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 72 >:current
< '++' , - >
< ';' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：-                                                                                                    
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
关键字：int
< id , 42 >:j
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< id , 42 >:j
< relop , LT(<) >
< num ,12 >:8
< ';' , - >
< id , 42 >:j
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：%02X                                                                                                 
< esc, 双引号字符 >
< ',' , - >
< id , 19 >:mem
< '[' , - >
< id , 72 >:current
< ']' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 72 >:current
< '++' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 73 >:putchar
< '(' , - >
< esc , '''(单引号) >
< esc ,  >
< id , 8 >:n
< esc , '''(单引号) >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< id , 74 >:vm
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：int
关键字：main
< '(' , - >
< ')' , - >
< '{' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：freopen("input.txt", "r", stdin);
< '//' , note >
注释如下：vm.read();
< '//' , note >
注释如下：while (vm.next());
< '//' , note >
注释如下：fclose(stdin);
< id , 74 >:vm
< '.' , - >
< id , 18 >:fp
< relop , ass(=) >
< id , 75 >:fopen
< '(' , - >
< esc , 双引号字符 >
字符串：2-2-3.txt                                                                                            
< esc, 双引号字符 >
< ',' , - >
< esc , 双引号字符 >
字符串：r                                                                                                    
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 74 >:vm
< '.' , - >
< id , 33 >:read
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 76 >:fclose
< '(' , - >
< id , 74 >:vm
< '.' , - >
< id , 18 >:fp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：char
< id , 70 >:debug_cmd
< '[' , - >
< num ,18 >:16
< ']' , - >
< relop , ass(=) >
< '{' , - >
< num ,0 >:0
< '}' , - >
< ';' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：-                                                                                                    
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：while
< '(' , - >
< logicop , not(!) >
< id , 74 >:vm
< '.' , - >
< id , 24 >:terminated
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 34 >:fgets
< '(' , - >
< id , 70 >:debug_cmd
< ',' , - >
< num ,19 >:15
< ',' , - >
< id , 77 >:stdin
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 70 >:debug_cmd
< '[' , - >
< id , 37 >:strlen
< '(' , - >
< id , 70 >:debug_cmd
< ')' , - >
< '-' , - >
< num ,4 >:1
< ']' , - >
< relop , ass(=) >
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< logicop , not(!) >
< id , 43 >:strcmp
< '(' , - >
< id , 70 >:debug_cmd
< ',' , - >
< esc , 双引号字符 >
字符串：q                                                                                                    
< esc, 双引号字符 >
< ')' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：switch
< '(' , - >
< id , 70 >:debug_cmd
< '[' , - >
< num ,0 >:0
< ']' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：case
< esc , '''(单引号) >
< id , 61 >:u
< esc , '''(单引号) >
< ':' , - >
< '//' , note >
注释如下：打印汇编代码
关键字：if
< '(' , - >
< id , 70 >:debug_cmd
< '[' , - >
< num ,4 >:1
< ']' , - >
< relop, EQ(==) >
< num ,0 >:0
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 74 >:vm
< '.' , - >
< id , 64 >:print_code
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：case
< esc , '''(单引号) >
< id , 78 >:t
< esc , '''(单引号) >
< ':' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 74 >:vm
< '.' , - >
< id , 62 >:next
< '(' , - >
< ')' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 74 >:vm
< '.' , - >
< id , 66 >:print_registers
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 74 >:vm
< '.' , - >
< id , 65 >:print_next_line
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：else
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 74 >:vm
< '.' , - >
< id , 24 >:terminated
< relop , ass(=) >
< num ,4 >:1
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
关键字：case
< esc , '''(单引号) >
< id , 41 >:r
< esc , '''(单引号) >
< ':' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 70 >:debug_cmd
< '[' , - >
< num ,4 >:1
< ']' , - >
< relop, EQ(==) >
< num ,0 >:0
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 74 >:vm
< '.' , - >
< id , 66 >:print_registers
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 74 >:vm
< '.' , - >
< id , 65 >:print_next_line
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：else
关键字：if
< '(' , - >
< id , 70 >:debug_cmd
< '[' , - >
< num ,4 >:1
< ']' , - >
< relop, EQ(==) >
< esc , '''(单引号) >
< esc , '''(单引号) >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 70 >:debug_cmd
< '[' , - >
< num ,8 >:2
< ']' , - >
< relop , GE(>=) >
< esc , '''(单引号) >
< id , 11 >:A
< esc , '''(单引号) >
< logicop , and(&&) >
< id , 70 >:debug_cmd
< '[' , - >
< num ,8 >:2
< ']' , - >
< relop , LE(<=) >
< esc , '''(单引号) >
< id , 79 >:D
< esc , '''(单引号) >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 70 >:debug_cmd
< '[' , - >
< num ,8 >:2
< ']' , - >
< assignop , assub(-=) >
< num ,0 >:0
< id , 80 >:x20
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 70 >:debug_cmd
< '[' , - >
< num ,8 >:2
< ']' , - >
< relop , GE(>=) >
< esc , '''(单引号) >
< id , 50 >:a
< esc , '''(单引号) >
< logicop , and(&&) >
< id , 70 >:debug_cmd
< '[' , - >
< num ,8 >:2
< ']' , - >
< relop , LE(<=) >
< esc , '''(单引号) >
< id , 81 >:d
< esc , '''(单引号) >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 74 >:vm
< '.' , - >
< id , 67 >:print_single_register
< '(' , - >
< id , 70 >:debug_cmd
< '[' , - >
< num ,8 >:2
< ']' , - >
< '-' , - >
< esc , '''(单引号) >
< id , 50 >:a
< esc , '''(单引号) >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 74 >:vm
< '.' , - >
< id , 65 >:print_next_line
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
关键字：case
< esc , '''(单引号) >
< id , 81 >:d
< esc , '''(单引号) >
< ':' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 70 >:debug_cmd
< '[' , - >
< num ,8 >:2
< ']' , - >
< logicop , and(&&) >
< id , 37 >:strlen
< '(' , - >
< id , 70 >:debug_cmd
< '+' , - >
< num ,8 >:2
< ')' , - >
< relop, EQ(==) >
< num ,1 >:4
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 74 >:vm
< '.' , - >
< id , 69 >:dump
< '(' , - >
< id , 70 >:debug_cmd
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：break
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< logicop , not(!) >
< id , 74 >:vm
< '.' , - >
< id , 24 >:terminated
< ')' , - >
< esc , LF(换行) >
< id , 52 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\n-                                                                                                  
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 76 >:fclose
< '(' , - >
< id , 77 >:stdin
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 82 >:system
< '(' , - >
< esc , 双引号字符 >
字符串：pause                                                                                                
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：return
< num ,0 >:0
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< esc , NULL(空字符) >
分析程序中的语句行数为：413
分析程序中的单词个数为：83
源程序中字符个数为：6990
