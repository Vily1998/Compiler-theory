< '#' , - >
关键字：include
< relop , LT(<) >
< id , 0 >:stdio
< '.' , - >
< id , 1 >:h
< relop , GT(>) >
< esc , LF(换行) >
< '#' , - >
关键字：include
< relop , LT(<) >
< id , 2 >:string
< '.' , - >
< id , 1 >:h
< relop , GT(>) >
< esc , LF(换行) >
< '#' , - >
关键字：include
< relop , LT(<) >
< id , 3 >:stdlib
< '.' , - >
< id , 1 >:h
< relop , GT(>) >
< esc , LF(换行) >
< '#' , - >
关键字：include
< relop , LT(<) >
< id , 4 >:conio
< '.' , - >
< id , 1 >:h
< relop , GT(>) >
< esc , LF(换行) >
关键字：struct
< id , 5 >:head
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：int
词法分析程序发现错误：位于第7行，第9列
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：unsigned
关键字：char
< id , 6 >:b
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：long
< id , 7 >:count
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：long
< id , 8 >:parent
< ',' , - >
< id , 9 >:lch
< ',' , - >
< id , 10 >:rch
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 11 >:header
< '[' , - >
< num ,0 >:512
< ']' , - >
< ',' , - >
< id , 12 >:tmp
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：void
< id , 13 >:compress
< '(' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
词法分析程序发现错误：位于第15行，第29列
出错字符串：特地设置的错误:);                                                                                    
< esc, 双引号字符 >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：char
< id , 15 >:filename
< '[' , - >
< num ,1 >:255
< ']' , - >
< ',' , - >
< id , 16 >:outputfile
< '[' , - >
< num ,1 >:255
< ']' , - >
< ',' , - >
< id , 17 >:buf
< '[' , - >
< num ,0 >:512
< ']' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：unsigned
关键字：char
< id , 18 >:c
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：long
< id , 19 >:i
< ',' , - >
< id , 20 >:j
< ',' , - >
< id , 21 >:m
< ',' , - >
< id , 22 >:n
< ',' , - >
< id , 23 >:f
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：long
< id , 24 >:min1
< ',' , - >
< id , 25 >:pt1
< ',' , - >
< id , 26 >:flength
< ',' , - >
< id , 27 >:length1
< ',' , - >
< id , 28 >:length2
< ';' , - >
< '//' , note >
注释如下：length1是源文件长度，length2是压缩后文件的长度 
< esc , HT(水平制表) >
关键字：double
< id , 29 >:div
< ';' , - >
< '//' , note >
注释如下：压缩率 
< esc , HT(水平制表) >
< id , 30 >:FILE
< '*' , - >
< id , 31 >:ifp
< ',' , - >
< '*' , - >
< id , 32 >:ofp
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\t请您输入需要压缩的文件：                                                                           
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 33 >:gets
< '(' , - >
< id , 15 >:filename
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 31 >:ifp
< relop , ass(=) >
< id , 34 >:fopen
< '(' , - >
< id , 15 >:filename
< ',' , - >
< esc , 双引号字符 >
字符串：rb                                                                                                   
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , HT(水平制表) >
< '//' , note >
注释如下： 以二进制形式打开待压缩的文件
< esc , HT(水平制表) >
关键字：if
< '(' , - >
< id , 31 >:ifp
< relop, EQ(==) >
< id , 35 >:NULL
< ')' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< '{' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\n\t文件打开失败!\n\n                                                                                
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：return
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< '}' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\t请您输入压缩后的文件名：                                                                           
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 33 >:gets
< '(' , - >
< id , 16 >:outputfile
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 32 >:ofp
< relop , ass(=) >
< id , 34 >:fopen
< '(' , - >
< id , 16 >:outputfile
< ',' , - >
< esc , 双引号字符 >
字符串：wb                                                                                                   
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , HT(水平制表) >
< '//' , note >
注释如下： 以二进制形式打开压缩后的文件
< esc , HT(水平制表) >
关键字：if
< '(' , - >
< id , 32 >:ofp
< relop, EQ(==) >
< id , 35 >:NULL
< ')' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< '{' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\n\t压缩文件失败!\n\n                                                                                
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
关键字：return
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< '}' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 26 >:flength
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：while
< '(' , - >
< logicop , not(!) >
< id , 36 >:feof
< '(' , - >
< id , 31 >:ifp
< ')' , - >
< ')' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< '{' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< id , 37 >:fread
< '(' , - >
< '&' , - >
< id , 18 >:c
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 11 >:header
< '[' , - >
< id , 18 >:c
< ']' , - >
< '.' , - >
< id , 7 >:count
< '++' , - >
< ';' , - >
< '//' , note >
注释如下：字符重复出现频率+1
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< id , 26 >:flength
< '++' , - >
< ';' , - >
< '//' , note >
注释如下：字符出现原文件长度+1
< esc , HT(水平制表) >
< '}' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 26 >:flength
< '--' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< id , 27 >:length1
< relop , ass(=) >
< id , 26 >:flength
< ';' , - >
< '//' , note >
注释如下：原文件长度用作求压缩率的分母
< esc , HT(水平制表) >
< id , 11 >:header
< '[' , - >
< id , 18 >:c
< ']' , - >
< '.' , - >
< id , 7 >:count
< '--' , - >
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< num ,0 >:512
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< '{' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
关键字：if
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 7 >:count
< relop , (!=) >
< num ,2 >:0
< ')' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 6 >:b
< relop , ass(=) >
< '(' , - >
关键字：unsigned
关键字：char
< ')' , - >
< id , 19 >:i
< ';' , - >
< esc , HT(水平制表) >
< '//' , note >
注释如下：数组下标对应相应的字符 
< esc , HT(水平制表) >
< esc , HT(水平制表) >
关键字：else
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 6 >:b
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 8 >:parent
< relop , ass(=) >
< '-' , - >
< num ,3 >:1
< ';' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 9 >:lch
< relop , ass(=) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 10 >:rch
< relop , ass(=) >
< '-' , - >
< num ,3 >:1
< ';' , - >
< '//' , note >
注释如下：对结点进行初始化
< esc , HT(水平制表) >
< '}' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< num ,4 >:256
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< '//' , note >
注释如下：根据频率（权值）大小，对结点进行排序，选择较小的结点进树
< '{' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 20 >:j
< relop , ass(=) >
< id , 19 >:i
< '+' , - >
< num ,3 >:1
< ';' , - >
< id , 20 >:j
< relop , LT(<) >
< num ,4 >:256
< ';' , - >
< id , 20 >:j
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 7 >:count
< relop , LT(<) >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< '.' , - >
< id , 7 >:count
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 12 >:tmp
< relop , ass(=) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< ';' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< relop , ass(=) >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< ';' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< relop , ass(=) >
< id , 12 >:tmp
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< num ,4 >:256
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
关键字：if
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 7 >:count
< relop, EQ(==) >
< num ,2 >:0
< ')' , - >
关键字：break
< ';' , - >
< '//' , note >
注释如下： 统计实际的字符种类（出现次数不为0），便于建树 
< id , 22 >:n
< relop , ass(=) >
< id , 19 >:i
< ';' , - >
< '//' , note >
注释如下：外部叶子结点数为n个时，内部结点数为n-1，整个哈夫曼树的需要的结点数为2*n-1. 
< id , 21 >:m
< relop , ass(=) >
< num ,5 >:2
< '*' , - >
< id , 22 >:n
< '-' , - >
< num ,3 >:1
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< id , 22 >:n
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< id , 21 >:m
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< '//' , note >
注释如下：构建哈夫曼树
< '{' , - >
< esc , LF(换行) >
< id , 24 >:min1
< relop , ass(=) >
< num ,6 >:999999999
< ';' , - >
< '//' , note >
注释如下：预设的最大权值，即结点出现的最大次数
关键字：for
< '(' , - >
< id , 20 >:j
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 20 >:j
< relop , LT(<) >
< id , 19 >:i
< ';' , - >
< id , 20 >:j
< '++' , - >
< ')' , - >
< '//' , note >
注释如下：找拿来归并的第一个没被选过的权值最小的元素 ，0―n-1 
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< '.' , - >
< id , 8 >:parent
< relop , (!=) >
< '-' , - >
< num ,3 >:1
< ')' , - >
关键字：continue
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下：parent!=-1说明该结点已存在哈夫曼树中，跳出循环重新选择新结点*/
关键字：if
< '(' , - >
< id , 24 >:min1
< relop , GT(>) >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< '.' , - >
< id , 7 >:count
< ')' , - >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 25 >:pt1
< relop , ass(=) >
< id , 20 >:j
< ';' , - >
< esc , LF(换行) >
< id , 24 >:min1
< relop , ass(=) >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< '.' , - >
< id , 7 >:count
< ';' , - >
< esc , LF(换行) >
关键字：continue
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 7 >:count
< relop , ass(=) >
< id , 11 >:header
< '[' , - >
< id , 25 >:pt1
< ']' , - >
< '.' , - >
< id , 7 >:count
< ';' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 25 >:pt1
< ']' , - >
< '.' , - >
< id , 8 >:parent
< relop , ass(=) >
< id , 19 >:i
< ';' , - >
< '//' , note >
注释如下：依据parent域值（结点层数）确定树中结点之间的关系
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 9 >:lch
< relop , ass(=) >
< id , 25 >:pt1
< ';' , - >
< '//' , note >
注释如下：计算左分支权值大小
< id , 24 >:min1
< relop , ass(=) >
< num ,6 >:999999999
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 20 >:j
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 20 >:j
< relop , LT(<) >
< id , 19 >:i
< ';' , - >
< id , 20 >:j
< '++' , - >
< ')' , - >
< '//' , note >
注释如下：找拿来归并的第二个没被选过的权值最小的元素 
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< '.' , - >
< id , 8 >:parent
< relop , (!=) >
< '-' , - >
< num ,3 >:1
< ')' , - >
关键字：continue
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 24 >:min1
< relop , GT(>) >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< '.' , - >
< id , 7 >:count
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 25 >:pt1
< relop , ass(=) >
< id , 20 >:j
< ';' , - >
< esc , LF(换行) >
< id , 24 >:min1
< relop , ass(=) >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< '.' , - >
< id , 7 >:count
< ';' , - >
< esc , LF(换行) >
关键字：continue
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 7 >:count
< assignop , assad(+=) >
< id , 11 >:header
< '[' , - >
< id , 25 >:pt1
< ']' , - >
< '.' , - >
< id , 7 >:count
< ';' , - >
< '//' , note >
注释如下：权值叠加 
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 10 >:rch
< relop , ass(=) >
< id , 25 >:pt1
< ';' , - >
< '//' , note >
注释如下：计算右分支权值大小
< id , 11 >:header
< '[' , - >
< id , 25 >:pt1
< ']' , - >
< '.' , - >
< id , 8 >:parent
< relop , ass(=) >
< id , 19 >:i
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< id , 22 >:n
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< '//' , note >
注释如下：哈夫曼无重复前缀编码
< '{' , - >
< esc , LF(换行) >
< id , 23 >:f
< relop , ass(=) >
< id , 19 >:i
< ';' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< '[' , - >
< num ,2 >:0
< ']' , - >
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< '//' , note >
注释如下：根结点编码0   
关键字：while
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 23 >:f
< ']' , - >
< '.' , - >
< id , 8 >:parent
< relop , (!=) >
< '-' , - >
< num ,3 >:1
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 20 >:j
< relop , ass(=) >
< id , 23 >:f
< ';' , - >
< esc , LF(换行) >
< id , 23 >:f
< relop , ass(=) >
< id , 11 >:header
< '[' , - >
< id , 23 >:f
< ']' , - >
< '.' , - >
< id , 8 >:parent
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 23 >:f
< ']' , - >
< '.' , - >
< id , 9 >:lch
< relop, EQ(==) >
< id , 20 >:j
< ')' , - >
< '//' , note >
注释如下：置左分支编码0
< '{' , - >
< esc , LF(换行) >
< id , 20 >:j
< relop , ass(=) >
< id , 39 >:strlen
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 40 >:memmove
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< '+' , - >
< num ,3 >:1
< ',' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ',' , - >
< id , 20 >:j
< '+' , - >
< num ,3 >:1
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：拷贝函数,得到正序的编码 
< '//' , note >
注释如下：依次存储连接“0”“1”编码
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< '[' , - >
< num ,2 >:0
< ']' , - >
< relop , ass(=) >
< esc , '''(单引号) >
< num ,2 >:0
< esc , '''(单引号) >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：else
< '//' , note >
注释如下：置右分支编码1
< '{' , - >
< esc , LF(换行) >
< id , 20 >:j
< relop , ass(=) >
< id , 39 >:strlen
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 40 >:memmove
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< '+' , - >
< num ,3 >:1
< ',' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ',' , - >
< id , 20 >:j
< '+' , - >
< num ,3 >:1
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< '[' , - >
< num ,2 >:0
< ']' , - >
< relop , ass(=) >
< esc , '''(单引号) >
< num ,3 >:1
< esc , '''(单引号) >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 41 >:fseek
< '(' , - >
< id , 31 >:ifp
< ',' , - >
< num ,2 >:0
< ',' , - >
< id , 42 >:SEEK_SET
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：从文件开始位置向前移动0字节，即定位到文件开始位置
< id , 43 >:fwrite
< '(' , - >
< '&' , - >
< id , 26 >:flength
< ',' , - >
关键字：sizeof
< '(' , - >
关键字：int
< ')' , - >
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '/*' , note >
注释如下：用来将数据写入文件流中，参数flength指向欲写入的数据地址，
总共写入的字符数以参数size*int来决定，返回实际写入的int数目1  
< '*/' , note >
< esc , LF(换行) >
< id , 41 >:fseek
< '(' , - >
< id , 32 >:ofp
< ',' , - >
< num ,7 >:8
< ',' , - >
< id , 42 >:SEEK_SET
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 17 >:buf
< '[' , - >
< num ,2 >:0
< ']' , - >
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< '//' , note >
注释如下：定义缓冲区,它的二进制表示00000000
< id , 23 >:f
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< esc , LF(换行) >
< id , 25 >:pt1
< relop , ass(=) >
< num ,7 >:8
< ';' , - >
< esc , LF(换行) >
< '//' , note >
注释如下： 以8位（一个字节长度）为处理单元
关键字：while
< '(' , - >
< logicop , not(!) >
< id , 36 >:feof
< '(' , - >
< id , 31 >:ifp
< ')' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 18 >:c
< relop , ass(=) >
< id , 44 >:fgetc
< '(' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 23 >:f
< '++' , - >
< ';' , - >
< '//' , note >
注释如下：统计已读取的文件长度，等于之前文件长度时循环结束 
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< id , 22 >:n
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 18 >:c
< relop, EQ(==) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 6 >:b
< ')' , - >
关键字：break
< ';' , - >
< '//' , note >
注释如下：找到编码表中对应的c的ascii码的位置，即为数组下标 
< '}' , - >
< esc , LF(换行) >
< id , 45 >:strcat
< '(' , - >
< id , 17 >:buf
< ',' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：将它们链接起来 
< id , 20 >:j
< relop , ass(=) >
< id , 39 >:strlen
< '(' , - >
< id , 17 >:buf
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 18 >:c
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< '//' , note >
注释如下： 清空字符暂存空间，改为暂存字符对应编码
关键字：while
< '(' , - >
< id , 20 >:j
< relop , GE(>=) >
< num ,7 >:8
< ')' , - >
< '//' , note >
注释如下：对哈夫曼编码位操作进行压缩存储
< '{' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< num ,7 >:8
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 17 >:buf
< '[' , - >
< id , 19 >:i
< ']' , - >
< relop, EQ(==) >
< esc , '''(单引号) >
< num ,3 >:1
< esc , '''(单引号) >
< ')' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< '//' , note >
注释如下：c=(c<<1)|1; 
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< '{' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< id , 18 >:c
< relop , ass(=) >
< id , 18 >:c
< relop , LT(<) >
< relop , LT(<) >
< num ,3 >:1
< ';' , - >
< '//' , note >
注释如下： 当编码为"1"，通过或操作符将其添加到字节的最低位
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< id , 18 >:c
< relop , ass(=) >
< id , 18 >:c
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< '}' , - >
< esc , LF(换行) >
关键字：else
< id , 18 >:c
< relop , ass(=) >
< id , 18 >:c
< relop , LT(<) >
< relop , LT(<) >
< num ,3 >:1
< ';' , - >
< '//' , note >
注释如下： 左移一位，为下一个bit腾出位置
< '}' , - >
< esc , LF(换行) >
< id , 43 >:fwrite
< '(' , - >
< '&' , - >
< id , 18 >:c
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：把读到的第一个8位字符串写到压缩文件中 
< id , 25 >:pt1
< '++' , - >
< ';' , - >
< '//' , note >
注释如下：统计压缩后文件的长度
< id , 46 >:strcpy
< '(' , - >
< id , 17 >:buf
< ',' , - >
< id , 17 >:buf
< '+' , - >
< num ,7 >:8
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：一个字节一个字节拼接，去除已处理的前八位
< id , 20 >:j
< relop , ass(=) >
< id , 39 >:strlen
< '(' , - >
< id , 17 >:buf
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 23 >:f
< relop, EQ(==) >
< id , 26 >:flength
< ')' , - >
关键字：break
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< '//' , note >
注释如下： 处理最后不足8bits编码
关键字：if
< '(' , - >
< id , 20 >:j
< relop , GT(>) >
< num ,2 >:0
< ')' , - >
< '//' , note >
注释如下：对哈夫曼编码位操作进行压缩存储
< '{' , - >
< esc , LF(换行) >
< id , 45 >:strcat
< '(' , - >
< id , 17 >:buf
< ',' , - >
< esc , 双引号字符 >
字符串：00000000                                                                                             
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：为了补齐8位，先往buf的后面加上8个0 
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< num ,7 >:8
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 17 >:buf
< '[' , - >
< id , 19 >:i
< ']' , - >
< relop, EQ(==) >
< esc , '''(单引号) >
< num ,3 >:1
< esc , '''(单引号) >
< ')' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< '//' , note >
注释如下：c=(c<<1)|1; 
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< '{' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< id , 18 >:c
< relop , ass(=) >
< id , 18 >:c
< relop , LT(<) >
< relop , LT(<) >
< num ,3 >:1
< ';' , - >
< '//' , note >
注释如下： 当编码为"1"，通过或操作符将其添加到字节的最低位
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< id , 18 >:c
< relop , ass(=) >
< id , 18 >:c
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< '}' , - >
< esc , LF(换行) >
关键字：else
< id , 18 >:c
< relop , ass(=) >
< id , 18 >:c
< relop , LT(<) >
< relop , LT(<) >
< num ,3 >:1
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 43 >:fwrite
< '(' , - >
< '&' , - >
< id , 18 >:c
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 25 >:pt1
< '++' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< id , 41 >:fseek
< '(' , - >
< id , 32 >:ofp
< ',' , - >
< num ,8 >:4
< ',' , - >
< id , 42 >:SEEK_SET
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：从文件开头偏移1个long型，即4个字节的偏移量 
< id , 43 >:fwrite
< '(' , - >
< '&' , - >
< id , 25 >:pt1
< ',' , - >
关键字：sizeof
< '(' , - >
关键字：long
< ')' , - >
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：把压缩文件长度、叶子节点个数等一系列信息均传入压缩文件中 
< id , 41 >:fseek
< '(' , - >
< id , 32 >:ofp
< ',' , - >
< id , 25 >:pt1
< ',' , - >
< id , 42 >:SEEK_SET
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 43 >:fwrite
< '(' , - >
< '&' , - >
< id , 22 >:n
< ',' , - >
关键字：sizeof
< '(' , - >
关键字：long
< ')' , - >
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< id , 22 >:n
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< '//' , note >
注释如下：把完整的一棵哈夫曼树的编码信息全部传入到压缩文件中 
< '{' , - >
< esc , LF(换行) >
< id , 43 >:fwrite
< '(' , - >
< '&' , - >
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 6 >:b
< ')' , - >
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：传入对应的ascii码的数组位置 
< id , 18 >:c
< relop , ass(=) >
< id , 39 >:strlen
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 43 >:fwrite
< '(' , - >
< '&' , - >
< id , 18 >:c
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 20 >:j
< relop , ass(=) >
< id , 39 >:strlen
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 20 >:j
< '%' , - >
< num ,7 >:8
< relop , (!=) >
< num ,2 >:0
< ')' , - >
< '//' , note >
注释如下：若存储的位数不是8的倍数，则补0   
< '{' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 23 >:f
< relop , ass(=) >
< id , 20 >:j
< '%' , - >
< num ,7 >:8
< ';' , - >
< id , 23 >:f
< relop , LT(<) >
< num ,7 >:8
< ';' , - >
< id , 23 >:f
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< id , 45 >:strcat
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ',' , - >
< esc , 双引号字符 >
字符串：0                                                                                                    
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：while
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< '[' , - >
< num ,2 >:0
< ']' , - >
< relop , (!=) >
< num ,2 >:0
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 18 >:c
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 20 >:j
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 20 >:j
< relop , LT(<) >
< num ,7 >:8
< ';' , - >
< id , 20 >:j
< '++' , - >
< ')' , - >
< '//' , note >
注释如下：字符的有效存储不超过8位，则对有效位数左移实现两字符编码的连接
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< '[' , - >
< id , 20 >:j
< ']' , - >
< relop, EQ(==) >
< esc , '''(单引号) >
< num ,3 >:1
< esc , '''(单引号) >
< ')' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< '//' , note >
注释如下：c=(c<<1)|1;   
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< '{' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< id , 18 >:c
< relop , ass(=) >
< id , 18 >:c
< relop , LT(<) >
< relop , LT(<) >
< num ,3 >:1
< ';' , - >
< '//' , note >
注释如下：|1不改变原位置上的“0”“1”值	
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< id , 18 >:c
< relop , ass(=) >
< id , 18 >:c
< ';' , - >
< esc , LF(换行) >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< '}' , - >
< esc , LF(换行) >
关键字：else
< id , 18 >:c
< relop , ass(=) >
< id , 18 >:c
< relop , LT(<) >
< relop , LT(<) >
< num ,3 >:1
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 46 >:strcpy
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ',' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< '+' , - >
< num ,7 >:8
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：把字符的编码按原先存储顺序连接
< id , 43 >:fwrite
< '(' , - >
< '&' , - >
< id , 18 >:c
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 28 >:length2
< relop , ass(=) >
< id , 25 >:pt1
< '--' , - >
< ';' , - >
< esc , LF(换行) >
< id , 29 >:div
< relop , ass(=) >
< '(' , - >
< '(' , - >
关键字：double
< ')' , - >
< id , 27 >:length1
< '-' , - >
< '(' , - >
关键字：double
< ')' , - >
< id , 28 >:length2
< ')' , - >
< '/' , - >
< '(' , - >
关键字：double
< ')' , - >
< id , 27 >:length1
< ';' , - >
< '//' , note >
注释如下：计算文件的压缩率
< id , 47 >:fclose
< '(' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 47 >:fclose
< '(' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\n\t压缩文件成功!\n                                                                                  
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\t压缩率为 %f%%\n\n                                                                                  
< esc, 双引号字符 >
< ',' , - >
< id , 29 >:div
< '*' , - >
< num ,9 >:100
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：return
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< esc , LF(换行) >
< '/*' , note >
注释如下：解压缩  据写入文件流中，参数flength指向欲写入的数据地址，
总共写入的字符数以参数size*int来决定，返回实际写入的int数目1  
< '*/' , note >
< esc , LF(换行) >
关键字：void
< id , 48 >:uncompress
< '(' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：char
< id , 15 >:filename
< '[' , - >
< num ,1 >:255
< ']' , - >
< ',' , - >
< id , 16 >:outputfile
< '[' , - >
< num ,1 >:255
< ']' , - >
< ',' , - >
< id , 17 >:buf
< '[' , - >
< num ,1 >:255
< ']' , - >
< ',' , - >
< id , 49 >:bx
< '[' , - >
< num ,1 >:255
< ']' , - >
< ';' , - >
< esc , LF(换行) >
关键字：unsigned
关键字：char
< id , 18 >:c
< ';' , - >
< esc , LF(换行) >
关键字：long
< id , 19 >:i
< ',' , - >
< id , 20 >:j
< ',' , - >
< id , 21 >:m
< ',' , - >
< id , 22 >:n
< ',' , - >
< id , 23 >:f
< ',' , - >
< id , 50 >:p
< ',' , - >
< id , 51 >:l
< ';' , - >
< esc , LF(换行) >
关键字：long
< id , 26 >:flength
< ';' , - >
< esc , LF(换行) >
< id , 30 >:FILE
< '*' , - >
< id , 31 >:ifp
< ',' , - >
< '*' , - >
< id , 32 >:ofp
< ';' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\t请您输入需要解压缩的文件：                                                                         
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 33 >:gets
< '(' , - >
< id , 15 >:filename
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 31 >:ifp
< relop , ass(=) >
< id , 34 >:fopen
< '(' , - >
< id , 15 >:filename
< ',' , - >
< esc , 双引号字符 >
字符串：rb                                                                                                   
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 31 >:ifp
< relop, EQ(==) >
< id , 35 >:NULL
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\n\t文件打开失败!\n                                                                                  
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：return
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\t请您输入解压缩后的文件名：                                                                         
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 33 >:gets
< '(' , - >
< id , 16 >:outputfile
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 32 >:ofp
< relop , ass(=) >
< id , 34 >:fopen
< '(' , - >
< id , 16 >:outputfile
< ',' , - >
< esc , 双引号字符 >
字符串：wb                                                                                                   
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 32 >:ofp
< relop, EQ(==) >
< id , 35 >:NULL
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\n\t解压缩文件失败!\n                                                                                
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：return
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< '//' , note >
注释如下：还原节点的所有信息 
< id , 37 >:fread
< '(' , - >
< '&' , - >
< id , 26 >:flength
< ',' , - >
关键字：sizeof
< '(' , - >
关键字：long
< ')' , - >
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：读取原文件长度，对文件进行定位
< id , 37 >:fread
< '(' , - >
< '&' , - >
< id , 23 >:f
< ',' , - >
关键字：sizeof
< '(' , - >
关键字：long
< ')' , - >
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< esc , HT(水平制表) >
< esc , HT(水平制表) >
< '//' , note >
注释如下：读取压缩文件的长度 
< id , 41 >:fseek
< '(' , - >
< id , 31 >:ifp
< ',' , - >
< id , 23 >:f
< ',' , - >
< id , 42 >:SEEK_SET
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 37 >:fread
< '(' , - >
< '&' , - >
< id , 22 >:n
< ',' , - >
关键字：sizeof
< '(' , - >
关键字：long
< ')' , - >
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< esc , HT(水平制表) >
< '//' , note >
注释如下：读取叶子节点个数 
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< id , 22 >:n
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 37 >:fread
< '(' , - >
< '&' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 6 >:b
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 37 >:fread
< '(' , - >
< '&' , - >
< id , 18 >:c
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 50 >:p
< relop , ass(=) >
< '(' , - >
关键字：long
< ')' , - >
< id , 18 >:c
< ';' , - >
< '//' , note >
注释如下：读取原文件字符的权值
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 7 >:count
< relop , ass(=) >
< id , 50 >:p
< ';' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< '[' , - >
< num ,2 >:0
< ']' , - >
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 50 >:p
< '%' , - >
< num ,7 >:8
< relop , GT(>) >
< num ,2 >:0
< ')' , - >
< id , 21 >:m
< relop , ass(=) >
< id , 50 >:p
< '/' , - >
< num ,7 >:8
< '+' , - >
< num ,3 >:1
< ';' , - >
< esc , LF(换行) >
关键字：else
< id , 21 >:m
< relop , ass(=) >
< id , 50 >:p
< '/' , - >
< num ,7 >:8
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 20 >:j
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 20 >:j
< relop , LT(<) >
< id , 21 >:m
< ';' , - >
< id , 20 >:j
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 37 >:fread
< '(' , - >
< '&' , - >
< id , 18 >:c
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 23 >:f
< relop , ass(=) >
< id , 18 >:c
< ';' , - >
< esc , LF(换行) >
< id , 52 >:itoa
< '(' , - >
< id , 23 >:f
< ',' , - >
< id , 17 >:buf
< ',' , - >
< num ,5 >:2
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：将f转换为二进制表示的字符串
< id , 23 >:f
< relop , ass(=) >
< id , 39 >:strlen
< '(' , - >
< id , 17 >:buf
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 51 >:l
< relop , ass(=) >
< num ,7 >:8
< ';' , - >
< id , 51 >:l
< relop , GT(>) >
< id , 23 >:f
< ';' , - >
< id , 51 >:l
< '--' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 45 >:strcat
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ',' , - >
< esc , 双引号字符 >
字符串：0                                                                                                    
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 45 >:strcat
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ',' , - >
< id , 17 >:buf
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< '[' , - >
< id , 50 >:p
< ']' , - >
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< id , 22 >:n
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< '//' , note >
注释如下：根据哈夫曼编码的长短，对结点进行排序，减少时间复杂度
< '{' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 20 >:j
< relop , ass(=) >
< id , 19 >:i
< '+' , - >
< num ,3 >:1
< ';' , - >
< id , 20 >:j
< relop , LT(<) >
< id , 22 >:n
< ';' , - >
< id , 20 >:j
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 39 >:strlen
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ')' , - >
< relop , GT(>) >
< id , 39 >:strlen
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ')' , - >
< ')' , - >
< '//' , note >
注释如下：冒泡排序 
< '{' , - >
< esc , LF(换行) >
< id , 12 >:tmp
< relop , ass(=) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< ';' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< relop , ass(=) >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< ';' , - >
< esc , LF(换行) >
< id , 11 >:header
< '[' , - >
< id , 20 >:j
< ']' , - >
< relop , ass(=) >
< id , 12 >:tmp
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 50 >:p
< relop , ass(=) >
< id , 39 >:strlen
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 22 >:n
< '-' , - >
< num ,3 >:1
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 41 >:fseek
< '(' , - >
< id , 31 >:ifp
< ',' , - >
< num ,7 >:8
< ',' , - >
< id , 42 >:SEEK_SET
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 21 >:m
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< esc , LF(换行) >
< id , 49 >:bx
< '[' , - >
< num ,2 >:0
< ']' , - >
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：while
< '(' , - >
< num ,3 >:1
< ')' , - >
< '//' , note >
注释如下：通过哈夫曼编码的长短，依次解码，从原来的位存储还原到字节存储
< '{' , - >
< esc , LF(换行) >
关键字：while
< '(' , - >
< id , 39 >:strlen
< '(' , - >
< id , 49 >:bx
< ')' , - >
< relop , LT(<) >
< '(' , - >
关键字：unsigned
关键字：int
< ')' , - >
< id , 50 >:p
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 37 >:fread
< '(' , - >
< '&' , - >
< id , 18 >:c
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 23 >:f
< relop , ass(=) >
< id , 18 >:c
< ';' , - >
< esc , LF(换行) >
< id , 52 >:itoa
< '(' , - >
< id , 23 >:f
< ',' , - >
< id , 17 >:buf
< ',' , - >
< num ,5 >:2
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：将f转化为二进制数存到一个缓冲区buf里面 
< id , 23 >:f
< relop , ass(=) >
< id , 39 >:strlen
< '(' , - >
< id , 17 >:buf
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 51 >:l
< relop , ass(=) >
< num ,7 >:8
< ';' , - >
< id , 51 >:l
< relop , GT(>) >
< id , 23 >:f
< ';' , - >
< id , 51 >:l
< '--' , - >
< ')' , - >
< '//' , note >
注释如下：在单字节内对相应位置补0
< '{' , - >
< esc , LF(换行) >
< id , 45 >:strcat
< '(' , - >
< id , 49 >:bx
< ',' , - >
< esc , 双引号字符 >
字符串：0                                                                                                    
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< id , 45 >:strcat
< '(' , - >
< id , 49 >:bx
< ',' , - >
< id , 17 >:buf
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
关键字：for
< '(' , - >
< id , 19 >:i
< relop , ass(=) >
< num ,2 >:0
< ';' , - >
< id , 19 >:i
< relop , LT(<) >
< id , 22 >:n
< ';' , - >
< id , 19 >:i
< '++' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 53 >:memcmp
< '(' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 38 >:bits
< ',' , - >
< id , 49 >:bx
< ',' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 7 >:count
< ')' , - >
< relop, EQ(==) >
< num ,2 >:0
< ')' , - >
关键字：break
< ';' , - >
< '//' , note >
注释如下：比较是否已还原出节点的所有权值 
< '}' , - >
< esc , LF(换行) >
< id , 46 >:strcpy
< '(' , - >
< id , 49 >:bx
< ',' , - >
< id , 49 >:bx
< '+' , - >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 7 >:count
< ')' , - >
< ';' , - >
< '/*' , note >
注释如下：从压缩文件中的按位存储还原到按字节存储字符，
           字符位置不改变  数以参数size*int来决定，返回实际写入的int数目1  
< '*/' , note >
< esc , LF(换行) >
< id , 18 >:c
< relop , ass(=) >
< id , 11 >:header
< '[' , - >
< id , 19 >:i
< ']' , - >
< '.' , - >
< id , 6 >:b
< ';' , - >
< esc , LF(换行) >
< id , 43 >:fwrite
< '(' , - >
< '&' , - >
< id , 18 >:c
< ',' , - >
< num ,3 >:1
< ',' , - >
< num ,3 >:1
< ',' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 21 >:m
< '++' , - >
< ';' , - >
< '//' , note >
注释如下：统计解压缩后文件的长度
关键字：if
< '(' , - >
< id , 21 >:m
< relop, EQ(==) >
< id , 26 >:flength
< ')' , - >
关键字：break
< ';' , - >
< '//' , note >
注释如下：flength是原文件长度
< '}' , - >
< esc , LF(换行) >
< id , 47 >:fclose
< '(' , - >
< id , 31 >:ifp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 47 >:fclose
< '(' , - >
< id , 32 >:ofp
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\n\t解压缩文件成功!\n                                                                                
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 21 >:m
< relop, EQ(==) >
< id , 26 >:flength
< ')' , - >
< '//' , note >
注释如下：对解压缩后文件和原文件相同性比较进行判断（根据文件大小）
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\t解压缩文件与原文件相同!\n\n                                                                        
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：else
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\t解压缩文件与原文件不同!\n\n                                                                        
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：return
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '/*' , note >
注释如下：主函数  件中的按位存储还原到按字节存储字符，
           字符位置不改变  数以参数size*int来决定，返回实际写入的int数目1  
< '*/' , note >
< esc , LF(换行) >
关键字：int
关键字：main
< '(' , - >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
关键字：int
< id , 18 >:c
< ';' , - >
< esc , LF(换行) >
关键字：while
< '(' , - >
< num ,3 >:1
< ')' , - >
< '//' , note >
注释如下：菜单工具栏
< '{' , - >
< esc , LF(换行) >
关键字：while
< '(' , - >
< id , 18 >:c
< relop, EQ(==) >
< esc , '''(单引号) >
< num ,2 >:0
< esc , '''(单引号) >
< logicop , or(||) >
< id , 18 >:c
< relop, EQ(==) >
< esc , '''(单引号) >
< num ,3 >:1
< esc , '''(单引号) >
< logicop , or(||) >
< id , 18 >:c
< relop, EQ(==) >
< esc , '''(单引号) >
< num ,5 >:2
< esc , '''(单引号) >
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：对用户输入进行容错处理
< '{' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\n\t*请选择相应功能(0-2):                                                                            
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 18 >:c
< relop , ass(=) >
< id , 54 >:getch
< '(' , - >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：%c\n                                                                                                 
< esc, 双引号字符 >
< ',' , - >
< id , 18 >:c
< ')' , - >
< ';' , - >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 18 >:c
< relop , (!=) >
< esc , '''(单引号) >
< num ,2 >:0
< esc , '''(单引号) >
< logicop , and(&&) >
< id , 18 >:c
< relop , (!=) >
< esc , '''(单引号) >
< num ,3 >:1
< esc , '''(单引号) >
< logicop , and(&&) >
< id , 18 >:c
< relop , (!=) >
< esc , '''(单引号) >
< num ,5 >:2
< esc , '''(单引号) >
< ')' , - >
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\t@_@请检查您的输入在0~2之间！\n                                                                     
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\t请再输入一遍！\n                                                                                   
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< '}' , - >
< esc , LF(换行) >
< esc , LF(换行) >
关键字：if
< '(' , - >
< id , 18 >:c
< relop, EQ(==) >
< esc , '''(单引号) >
< num ,3 >:1
< esc , '''(单引号) >
< ')' , - >
< id , 13 >:compress
< '(' , - >
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：调用压缩子函数
关键字：else
关键字：if
< '(' , - >
< id , 18 >:c
< relop, EQ(==) >
< esc , '''(单引号) >
< num ,5 >:2
< esc , '''(单引号) >
< ')' , - >
< id , 48 >:uncompress
< '(' , - >
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：调用解压缩子函数
关键字：else
< esc , LF(换行) >
< '{' , - >
< esc , LF(换行) >
< id , 14 >:printf
< '(' , - >
< esc , 双引号字符 >
字符串：\t欢迎您再次使用该工具^_^\n                                                                          
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< esc , LF(换行) >
< id , 55 >:exit
< '(' , - >
< num ,2 >:0
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：退出该工具
< '}' , - >
< esc , LF(换行) >
< id , 56 >:system
< '(' , - >
< esc , 双引号字符 >
字符串：pause                                                                                                
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：任意键继续
< id , 56 >:system
< '(' , - >
< esc , 双引号字符 >
字符串：cls                                                                                                  
< esc, 双引号字符 >
< ')' , - >
< ';' , - >
< '//' , note >
注释如下：清屏
< '}' , - >
< esc , LF(换行) >
关键字：return
< num ,2 >:0
< ';' , - >
< esc , LF(换行) >
< '}' , - >
< '}' , - >
< esc , NULL(空字符) >
分析程序中的语句行数为：360
分析程序中的单词个数为：57
源程序中字符个数为：7418
